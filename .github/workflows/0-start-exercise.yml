name: Step 0 # Start Exercise

on:
  push:
    branches:
      - main

permissions:
  contents: write
  actions: write
  issues: write

env:
  STEP_1_FILE: ".github/steps/1-step.md"

jobs:
  start_exercise:
    if: |
      !github.event.repository.is_template
    name: Start Exercise
    runs-on: ubuntu-latest
    outputs:
      issue-url: ${{ steps.create-issue.outputs.issue-url }}
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create welcome issue
        id: create-issue
        run: |
          ISSUE_URL=$(gh issue create \
            --title "🎯 Welcome to Business Analysis with MCP and AI!" \
            --body "$(cat << 'EOF'
          # 🎯 Welcome to Hollard's Business Analysis Training!

          Hey ${{ github.actor }}! 👋

          Welcome to our cutting-edge Business Analysis exercise! You're about to learn how to modernize our WhatsApp claims process using the latest AI tools.

          ## What You'll Learn 📚

          ✅ **GitHub Copilot** - AI-powered assistance for writing requirements and documentation  
          ✅ **MCP (Model Context Protocol)** - Connect to external data sources for better analysis  
          ✅ **Professional Documentation** - Create structured, version-controlled requirements  
          ✅ **AI-Enhanced Analysis** - Leverage AI to improve your business analysis workflow

          ## Your Mission 🎯

          You're working for **ABC Insurance Company** and tasked with analyzing how to introduce WhatsApp into their claims process. You'll replace the current legacy system with a new straight-through process driven via WhatsApp.

          ## Ready to Get Started? 🚀

          This exercise is **self-paced** - take breaks when needed! The entire exercise takes about **45 minutes** to complete.

          **Remember:** Feel free to experiment and ask questions. This is a safe learning environment!

          ---

          *Ready for your first step? I'll post the instructions below!* ⬇️
          EOF
          )")
          
          echo "issue-url=$ISSUE_URL" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  post_next_step_content:
    name: Post next step content
    runs-on: ubuntu-latest
    needs: [start_exercise]
    env:
      ISSUE_URL: ${{ needs.start_exercise.outputs.issue-url }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Build step 1 content
        id: build-comment
        run: |
          # Read the step 1 file and replace variables
          STEP_CONTENT=$(cat "${{ env.STEP_1_FILE }}" | sed "s/{{repo_owner}}\\/{{repo_name}}/${{ github.repository }}/g")
          
          # Create the formatted comment
          cat << 'EOF' > step1_comment.md
          ---

          ## 📋 Step 1: Setting Up Your Business Analysis Environment

          EOF
          
          echo "$STEP_CONTENT" >> step1_comment.md

      - name: Post step 1 content
        run: |
          gh issue comment "$ISSUE_URL" \
            --body-file step1_comment.md
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Post progress tracking comment
        run: |
          gh issue comment "$ISSUE_URL" \
            --body "$(cat << 'EOF'
          ---
          
          ## 👀 I'm watching for your progress!
          
          I'll automatically check your progress and provide feedback as you complete each step.
          
          **Need help?** 
          - Comment on this issue if you get stuck
          - Check the troubleshooting sections in each step
          - Remember: this is a learning exercise, so take your time!
          
          **Pro tip:** Keep this issue open in a tab so you can easily reference the instructions! 📌
          EOF
          )"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Enable next workflow
        run: |
          gh workflow enable "Step 1" || echo "Step 1 workflow not found - will be enabled when created"
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
